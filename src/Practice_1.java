/**
O * 本测试用到了JUnit，在完成以下要求代码后，按照如下步骤检测：
 * 1. 右键点击Practice_1Test.java
 * 2. 选择运行方式 --> JUnit测试【如果没有这个选项，直接双击进入文件，然后点击运行的那个绿色按钮】
 * 3. 我们的每一个变量对应一个测试，如果你的答案是正确的，那么所有的测试都是通过的，他们的左下角都会有绿色的对号
 * 4. 如果有测试没有通过，左下角就会是红色或者蓝色的×
 * 我们的目的就是要通过所有变量的测试
 */
import tools.Constants;
public class Practice_1 {
	// 定义一个字符串x0,内容为 1
	String		x0	= "1";
	// 定义一个字符串x1,内容为 12

	// 在tools包的Constants类里面有一个静态的String类型变量str1，定义一个整型x2, 内容为str1的长度

	// 把x2转变为String，加到x1后面，生成新的x3

	// 定义一个字符串x4,内容为3.14

	// 把x4里面的内容存到 float x5里面：

	// 把x4里面的内容存到 double x6里面：

	// 在把x5里面的内容放到 String的x7中

	// 在把x6里面的内容放到 String的x8中

	// 把tools包中的Constants类里面的str1中的第12个字符放到 char x9中

	// 把tools包中的Constants类里面的str1中的最后一个字符放到 char x10中

	/**
	 * 我们都知道每一个字符类型值，比如说 'A' 其实在内存中就是一个数字比如：'A' 就是 65 原因是在Unicode中'A'排序是第65位，OK
	 * 想一个办法把 Constants类里面的str1中的所有的字母表示的数字的和保存到x11中 注意代码要打入到{ }中
	 */
	static int	x11	= 0;
	// 这个叫做静态代码段，你不用理解他是什么意思
	static {
		// 你对x11的处理的代码要输入到这里

	}
	//判断tools包中的Constants类里的str1和str2是否相等，把比较的结果保存在boolean x12中

}
